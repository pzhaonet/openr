<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xuer on Open R</title>
    <link>https://openr.netlify.com/zh/categories/xuer/</link>
    <description>Recent content in Xuer on Open R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 27 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://openr.netlify.com/zh/categories/xuer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>独狼死，群狼活：R 语言女子学习小组 &amp; 书友之窗</title>
      <link>https://openr.netlify.com/zh/blog/xuer-girls/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://openr.netlify.com/zh/blog/xuer-girls/</guid>
      <description>&lt;p&gt;文科女生 @dancingapple 买了《学 R》这本书，&lt;a href=&#34;http://xuer.dapengde.com/post/dancingapple/&#34;&gt;郑重宣告&lt;/a&gt;开始学习 R 语言。这个圈子里，据我所知，买了这书的还有：&lt;/p&gt;

&lt;p&gt;@tvb, @nostalgic1212, @veronicazhu, @hqy...&lt;/p&gt;

&lt;p&gt;都是女生！&lt;/p&gt;

&lt;p&gt;感慨之余，我做了个文案：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>答《学 R》读者</title>
      <link>https://openr.netlify.com/zh/blog/xuer-faq/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://openr.netlify.com/zh/blog/xuer-faq/</guid>
      <description>&lt;p&gt;我主笔的《&lt;a href=&#34;http://xuer.pzhao.net/&#34;&gt;学 R&lt;/a&gt;》一书正在热销。有些朋友问了一些问题，我在此一并作答。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我主笔的《学 R：零基础学习 R 语言》一书已面世</title>
      <link>https://openr.netlify.com/zh/blog/xuer-sale/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://openr.netlify.com/zh/blog/xuer-sale/</guid>
      <description>&lt;p&gt;书终于印好面世了。感谢北大的朱彤教授和 RStudio 公司的谢益辉博士慷慨作序。据我所知，这应该是国内第一本用 R bookdown 包来写作和排版的书。书的主页是 &lt;a href=&#34;http://xuer.pzhao.net&#34;&gt;http://xuer.pzhao.net&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于书封面设计的讨论</title>
      <link>https://openr.netlify.com/archives/19401/</link>
      <pubDate>Tue, 27 Jun 2017 09:19:57 +0000</pubDate>
      
      <guid>https://openr.netlify.com/archives/19401/</guid>
      <description>&lt;p&gt;昨天发了新书封面设计的三个方案. 我在微信朋友圈也征求大家的意见, 综合我博客上为数不多的投票, 汇总的结果是 白色 : 黑色 : 蓝色方案 为 2:10:8.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>《学R》序（朱彤）</title>
      <link>https://openr.netlify.com/zh/blog/preface_zhu/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://openr.netlify.com/zh/blog/preface_zhu/</guid>
      <description>&lt;p&gt;我读硕士研究生时的导师是朱彤教授。在朱老师科研小组 ZTGroup 学习的三年如沐春风，我从中得到的收获受益终生。正值北京大学环境大楼落成不久，又逢毕业季，作为环境科学与工程学院的院长，朱老师在极其繁忙的工作中抽出时间来为本书欣然作序，实属不易，仅凭“感激”二字岂能表达我们的谢意？&lt;/p&gt;

&lt;p&gt;下面是朱老师为本书写的序言。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pinyin: 把汉字转换成拼音的R包</title>
      <link>https://openr.netlify.com/zh/blog/pinyin/</link>
      <pubDate>Fri, 26 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://openr.netlify.com/zh/blog/pinyin/</guid>
      <description>&lt;p&gt;今天新写了个R包，粗暴地取名为 &lt;a href=&#34;https://github.com/pzhaonet/pinyin/&#34;&gt;pinyin&lt;/a&gt;，作用是把汉字转换成拼音。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>侠气</title>
      <link>https://openr.netlify.com/archives/19309/</link>
      <pubDate>Thu, 13 Apr 2017 12:49:17 +0000</pubDate>
      
      <guid>https://openr.netlify.com/archives/19309/</guid>
      <description>&lt;p&gt;我这个博客，访问量最大的帖子就是《 &lt;a href=&#34;http://pzhao.org/r4dummies&#34;&gt;R 菜鸟入门&lt;/a&gt;》。这是写给 R 语言新手的。四年前发布以来，浏览量累计大约 2 万。也就是说，如果只计算工作时间的话，平均每天每小时都有2个人在浏览这些帖子，如此连续了四年，对于这样一个小站来说，我还是挺得意的。就算是在高校讲课，如果每个班20人，每个学期一个班，我得教500年，才能这么大规模地普及 R 语言。但是500年后R语言早就不存在了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用 R blogdown 搭建个人博客或科研网站</title>
      <link>https://openr.netlify.com/archives/19304/</link>
      <pubDate>Tue, 11 Apr 2017 14:10:56 +0000</pubDate>
      
      <guid>https://openr.netlify.com/archives/19304/</guid>
      <description>&lt;p&gt;我正在撰写新书《 R 菜鸟入门》，新书预计今年下半年出版。本文是其中一个章节。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>R blogdown 搭建个人博客或科研网站</title>
      <link>https://openr.netlify.com/zh/blog/r-blogdown/</link>
      <pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://openr.netlify.com/zh/blog/r-blogdown/</guid>
      <description>本文收录在《学 R 》一书的附录中。
互联网时代有个自己的网站，就好像真实世界里有了自己的房子（服务器）和固定地址（域名）；自我介绍时附上自己的网站，就像生活里邀请朋友来访或者职场上递上名片，都甚为方便。然而，建立一个网站并不容易，涉及诸多领域的知识和技能，门槛比较高。好在，我们有万能的R语言，搭建网站只需几分钟，而并不需要多少网络知识。你甚至不用懂 R 语言是什么，照我下面说的做就行，包教包会，学不会免费再教。
这里，我提供两个示范，演示如何使用 R 语言的 blogdown 扩展包1，用来搭建一个个人博客和一个科研小组网站。截至本文成稿之日，blogdown 含苞待放，尚未正式发布，但是已经能够正常安装使用了。我们来尝尝鲜，提前一睹她的芳容。
R blogdown 简介和安装R blogdown 是什么
R语言的一个扩展包，用来制作网站的工具。可以用非常简洁的方式快速搭建静态网页构成的网站。虽然名字里有“博客”（blog）字样，但并不仅限于博客。非常适合搭建一个科研小组的展示窗口。基于 markdown 扩展语法，可以在网页中方便地插入图表、脚注、数学公式、R 代码等元素。非常容易将 bookdown 生成的论文转化成网页展示。非常易于维护，迁移，备份。本书的官方网站就是用 R blogdown 搭建的。网站里给大家提供的 R 示例代码、试读章节、勘误表等，都是直接从书稿中拷贝粘贴到文本文件里，然后运行一下 blogdown 的指令，网站就自动更新了。
安装
blogdown 的背景平台是 R 语言，用户界面首选 RStudio ，产生的网站框架是 Hugo ，掰手指头数一数，要安装4样东西，略显繁琐，但并不难，一劳永逸。安装方式如下：
R。去R的服务器CRAN，点击Download R for Windows（其他操作系统的用户请自便），在打开的新网页最上方点击base，就找到下载链接了。下载完毕后安装，一路“下一步”的傻瓜式安装即可。RStudio。去官网下载安装文件运行即可。if(!require(devtools)) install.packages(&amp;#39;devtools&amp;#39;)devtools::install_github(&amp;#39;rstudio/blogdown&amp;#39;)解释一下：由于 blogdown 目前只发布到了 GitHub 服务器上，尚未发布到CRAN，所以上面第一条代码先安装开发工具 devtools 包，第二行用这个包的install_github() 函数从 GitHub 安装。
blogdown::install_hugo()安装完毕。</description>
    </item>
    
    <item>
      <title>用 R bookdown 写吉他谱</title>
      <link>https://openr.netlify.com/archives/19291/</link>
      <pubDate>Thu, 06 Apr 2017 09:15:36 +0000</pubDate>
      
      <guid>https://openr.netlify.com/archives/19291/</guid>
      <description>&lt;p&gt;前情提要：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pzhao.org/archives/19122&#34;&gt;用 R 语言的 bookdown 写书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pzhao.org/archives/19150&#34;&gt;用 R 语言的 bookdown 写诗集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pzhao.org/archives/19190&#34;&gt;用 R 语言的 bookdown 写学术论文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pzhao.org/archives/19141&#34;&gt;R 语言 bookdown 快速入门和语法速查&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本篇说说如何用 R 语言的 bookdown 写吉他谱。别拦着我，让我陷进bookdown的怀抱里爽死吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>R bookdown 写学术论文</title>
      <link>https://openr.netlify.com/zh/blog/r-bookdown/</link>
      <pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://openr.netlify.com/zh/blog/r-bookdown/</guid>
      <description>&lt;p&gt;&lt;em&gt;1&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;最近，我使用 R 语言的 bookdown 扩展包接连做了三件事：先是整理出一本跟&lt;a href=&#34;http://dapengde.com/archives/19122&#34;&gt; R 语言有关的书&lt;/a&gt;，然后把博客的帖子整理出一本&lt;a href=&#34;http://dapengde.com/archives/19150&#34;&gt;纯文本的中文书&lt;/a&gt;，这两天我又在用它来写一篇打算投稿的学术期刊论文。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如果用bookdown来写诗集</title>
      <link>https://openr.netlify.com/archives/19150/</link>
      <pubDate>Wed, 15 Mar 2017 14:21:56 +0000</pubDate>
      
      <guid>https://openr.netlify.com/archives/19150/</guid>
      <description>&lt;p&gt;今天，我用R的bookdown做出了第一本电子书：&amp;lt;&lt;a href=&#34;https://bookdown.org/baydap/papasdiary/papasdiary.html&#34;&gt;爸爸三定律&lt;/a&gt;&amp;gt;。内容是从我博客上选的育儿相关帖。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>R bookdown 快速入门和语法速查</title>
      <link>https://openr.netlify.com/archives/19141/</link>
      <pubDate>Wed, 15 Mar 2017 07:29:47 +0000</pubDate>
      
      <guid>https://openr.netlify.com/archives/19141/</guid>
      <description>&lt;div class=&#34;section level2&#34;&gt;
  &lt;h2&gt;
    快速开始&lt;br /&gt;
  &lt;/h2&gt;
  
  &lt;div id=&#34;r-bookdown-&#34; class=&#34;section level3&#34;&gt;
    &lt;h3&gt;
      R bookdown 是什么&lt;br /&gt;
    &lt;/h3&gt;
    
    &lt;ul&gt;
      &lt;li&gt;
        一个用来写书写文章的软件。
      &lt;/li&gt;
      &lt;li&gt;
        比Word更美观，比LaTeX更易用，比Markdown格式更丰富。
      &lt;/li&gt;
      &lt;li&gt;
        可以方便地插入目录、图表、交叉引用、脚注、索引。
      &lt;/li&gt;
      &lt;li&gt;
        可以方便地插入公式、参考文献、R代码。
      &lt;/li&gt;
      &lt;li&gt;
        可以生成漂亮的pdf、word和网页文件。
      &lt;/li&gt;
      &lt;li&gt;
        撰写可重复性报告的不二之选。
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;</description>
    </item>
    
    <item>
      <title>不可挡的bookdown</title>
      <link>https://openr.netlify.com/archives/19122/</link>
      <pubDate>Tue, 14 Mar 2017 14:36:57 +0000</pubDate>
      
      <guid>https://openr.netlify.com/archives/19122/</guid>
      <description>&lt;p&gt;最近，我打算把博客上关于R语言的帖子整理成一本书，希望弄得帅气一点，整齐一点，将来容易维护一点。涌进脑子的第一个念头是 &lt;span class=&#34;math inline&#34;&gt;(\LaTeX)&lt;/span&gt; ，第二个念头是想吐。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>R bookdown 语法标记速查</title>
      <link>https://openr.netlify.com/zh/blog/bookdown-cheatsheet/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://openr.netlify.com/zh/blog/bookdown-cheatsheet/</guid>
      <description>快速开始R bookdown 是什么一个用来写书写文章的软件。比Word更美观，比LaTeX更易用，比Markdown格式更丰富。可以方便地插入目录、图表、交叉引用、脚注、索引。可以方便地插入公式、参考文献、R代码。可以生成漂亮的pdf、word和网页文件。撰写可重复性报告的不二之选。安装下载R并安装。下载RStudio并安装。下载CTEX并安装。建议安装完整版。下载Pandoc并安装。运行RStudio。在左上面板的代码窗口输入并运行以下代码（安装bookdown扩展包）：install.packages(&amp;quot;bookdown&amp;quot;)install.packages(&amp;#39;servr&amp;#39;)好了，安装完毕。
从模板开始下载模板文档（到下载页面点击Clone or download - Download ZIP）：如果你要写英文文档，那么下载通用模板;如果你要写中文文档，那么下载中文模板。将模板文档解压缩到任意文件夹。
在解压缩后得到的文件里找到扩展名为.Rproj的文件。双击，默认会用RSudio打开。
在RStudio右上面板点击Build标签，再点击build book。好了，模板书出现在名为_book的子文件夹里。
在RStudio右下面板里会看到该文件夹里的文件，其中有一些扩展名为.Rmd的文件。逐个点击打开，把其中的内容修改成你自己的内容。除了index.Rm外，不需要的.Rmd文件可以删掉。
重复第4步，就得到了你自己的书。
对照一下.Rmd的文件内容和生成的文档，体会两者之间是如何对应的。
基本标记标记输出*斜体*斜体**粗体**粗体CO~2~CO2下标R^2^R2上标$E = mc^2$\(E = mc^2\) 行内公式（双美元符号为行间公式）[大鹏志](http://dapengde.</description>
    </item>
    
    <item>
      <title>不可挡的bookdown</title>
      <link>https://openr.netlify.com/zh/blog/inresistible-bookdown/</link>
      <pubDate>Mon, 13 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://openr.netlify.com/zh/blog/inresistible-bookdown/</guid>
      <description>最近，我打算把博客上关于R语言的帖子整理成一本书，希望弄得帅气一点，整齐一点，将来容易维护一点。涌进脑子的第一个念头是 \(\LaTeX\) ，第二个念头是想吐。
是的，虽然我推崇 \(\LaTeX\) ，觉得这个工具排出来的文档很漂亮，但自从弄完博士论文1 之后，除了帮别人备份一下博客2 、往论文里插几个公式和玩玩吉他谱3，我再也没碰过她。惰性开始代替折腾，我宁可点点鼠标写出一份不太美观的Word文档，也不想面对 \(\LaTeX\) 那让人头疼的代码。大概我是真上了岁数罢。
对于 \(\LaTeX\)，我想自己的内心深处是怀有恐惧的。她的美丽让我着迷，她的复杂令人生畏。
所以，这次整理博客，我决定在Word里做。用了这么多年，对Word的秉性我算是略知一二，从一开始就用主控文档和子文档的方式管理，以防单个文档太大而死机；从标题到R代码，我预先都设置好了样式以及样式的快捷键，方便调整格式；每写几句话，就左手抽筋一样ctrl+s一下，以防万一。其间，发现帖子里有些R代码要修改调试，我就咬牙忍着在RStudio和Word之间频繁拷贝粘贴的煎熬。反正换回 \(\LaTeX\) 也是一样想吐，既来之则安之，嫁鸡随鸡嫁狗随狗吧。
我天真地以为，这样就万无一失了。
有一天，我正在Word里改某篇帖子，改之前我留意了一下总页数是160多页。改了几个段落之后，我惊奇地发现，总页数成了220多页。再仔细找，发现有些代码区的文字无缘无故变成了乱码，一乱就新增几十页。进而测试发现，我正在好端端敲字，Word左下角的页数突然就刷刷地增加了，翻回去看，乱码已经被填进去了。试了好几次，都是这样。我甚至给文档权限设置为凭密码修订，仍然挡不住Word疯狂的脚步。
对着那自动呼呼上涨的页码，我想：认识十来年，想不到对你依然不了解。
\(\LaTeX\) 的倩影再度闪现在我脑海。她虽然复杂，但至少源文件是纯文本，不会胡来，不像Word这么没有底线。
为什么就没有个像Word那么界面简单，像 \(\LaTeX\) 那么源码单纯的两全其美方案呢？
“叮”的一声，脑子里冒出刚刚发布不久的bookdown(Xie 2016a)(Xie 2016b)。这是R语言的一个扩展包，专门用来写书，可以看作是R markdown的升级版。我的博客原文都是以markdown写成的，弄到bookdown里应当是顺理成章的事。只是大约因为上了岁数，我近几年对新工具越来越排斥，所以一直懒得尝试。这次被逼无奈，要不就试试吧。反正都是折腾，与其把精力花在让人心碎的Word里或让人心焦的 \(\LaTeX\) 里，还不如花在崭新的bookdown里。就算是有缺点，还能比Word和 \(\LaTeX\) 更不能忍么？
然后，刷！一晃十来天。春宵苦短日高起，从此君王不早朝。
这大半个月，我陶醉在bookdown的魅力里不可自拔。bookdown秉承拿来主义，把一大串工具链里的精华整合起来，让以前繁琐的步骤无比简化，怎一个爽快了得！她近乎完美地解决了我遇到的所有问题：纯文本操作，满足了我的控制欲；在导出完美的网页格式同时，还能导出为pdf和word文档，足够拿出来跟依赖Word的人交流；公式、脚注、交叉引用、目录、参考文献，功能齐全而不臃肿，格式标记简洁而优雅。我不再需要为Word的自以为是而抑郁，也不再需要为 \(\LaTeX\) 的纷繁复杂而烦恼了。
我用bookdown生成的书稿
一种亲切之美扑面而来，我感到无法抗拒无法阻挡。有了bookdown在手，写东西我还需要别的什么呢？想来想去，我不需要别的了。在Word和\(\LaTeX\) 之间摇摆了十来年，到头来才发现bookdown才是真爱。
不过，bookdown绝非完美。如果不了解rmarkdown(Allaire et al. 2017)，没见过 \(\LaTeX\) ，没听过pandoc，没用过knitr (Xie 2016c)(Xie 2015)(Xie 2014)，那么bookdown对新手来说，门槛仍然有点高。幸运的是，这几样工具我都用过，那么投入bookdown的怀抱就属于水到渠成了。即便如此，在使用初期仍然遇到了一些难以解决的问题，好在有bookdown的开发者益辉同学4 和其他同道中人热心地提供帮助，才能一路披荆斩棘，最后走上了幸福的康庄大道。
下面，我把我那些散落在各处的提问和解决方法汇总在这里。
编译起初我连bookdown的界面都没搞清楚，想编译却不知该点哪儿。益辉一直说build，build，我一直以为是菜单栏的build，后来才看到是在RStudio右上面板的build按钮。
bookdown是可以直接导出为word文档的。这么重要的功能，却隐藏得很深，在官方文档里都没有强调。导出方法是，在_output.yml里添加一行：
bookdown::word_document2: default 注意，default这个词是不能少的，不管它是不是默认。我也不知道为什么。
导出的word文档相当令人满意，参考文献的版式、图表的交叉引用都堪称完美。唯一不足之处，是公式的编号和交叉引用。bookdown的官方文档5给出的公式书写方案是，利用 \(\LaTeX\) 的公式环境来编号和引用，这一点在生成pdf时没问题，但生成word时，会发现别说编号，连公式本身都消失了。这大概是因为pandoc未能将公式环境正确转换的缘故。解决办法是，不使用公式环境，而使用行内公式（即公式前后有一个美元符号），公式前面用圆括号里加公式标签就可以了。例如，输入：
(@eq-mc) $E = mc^2$I like Eq. (@eq-mc) so much that I am falling love with her.</description>
    </item>
    
  </channel>
</rss>